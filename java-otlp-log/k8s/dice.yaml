---
apiVersion: v1
kind: Service
metadata:
  name: dice
spec:
  selector:
    app: dice
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dice
  template:
    metadata:
      labels:
        app: dice
    spec:
      containers:
        - name: dice
          image: flytux/dice:v1
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: "http://k8s-monitoring-opentelemetry-collector:4318"
            - name: OTEL_LOGS_EXPORTER
              value: "otlp"
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: service.name=dice,service.namespace=shop,service.version=1.1,deployment.environment=dev
            - name: OTEL_INSTRUMENTATION_LOGBACK_APPENDER_EXPERIMENTAL_LOG_ATTRIBUTES
              value: "true"
            - name: OTEL_INSTRUMENTATION_LOGBACK_APPENDER_EXPERIMENTAL_CAPTURE_KEY_VALUE_PAIR_ATTRIBUTES
              value: "true"
            - name: OTEL_INSTRUMENTATION_LOGBACK_APPENDER_EXPERIMENTAL_CAPTURE_MDC_ATTRIBUTES
              value: "true"
            - name: SERVICE_NAME
              value: dice
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app.kubernetes.io/instance: k8s-monitoring
  name: dice
  namespace: monitoring
spec:
  ingressClassName: traefik
  rules:
  - host: dice.local
    http:
      paths:
      - backend:
          service:
            name: dice
            port:
              number: 8080
        path: /
        pathType: Prefix
